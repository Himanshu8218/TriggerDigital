{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","name","age","phone","email","password","gender","city","countryCode","countryName","zipcode","contactName","contactNumber","group","loading","errorData","successData","componentDidMount","getGeoInfo","handleInputChange","event","target","value","type","checked","setState","axios","get","then","response","data","country_name","country","catch","error","console","log","handleSubmit","post","res","err","render","className","map","v","i","class","role","onChange","placeholder","id","years","year","index","src","valueType","showDefaultOption","val","selectCountry","for","onClick","disabled","aria-hidden","Date","getFullYear","Array","from","CountryRegionData","forEach","_","this","region","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f775306b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport axios from 'axios';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\nvar ENDPOINT = \"http://15.206.227.32:8080/api/dandi/user\"\n\nclass App extends React.Component {\n\n    state = {\n        name: '',\n        age: '',\n        phone: '',\n        email: '',\n        password: '',\n        gender: '',\n        city: '',\n        countryCode: 'IN',\n        countryName: '',\n        zipcode: '',\n        contactName: '',\n        contactNumber: '',\n        group: '',\n        loading: false,\n        errorData: null,\n        successData: null\n    }\n\n    constructor(props) {\n        super(props);\n        const year = (new Date()).getFullYear();\n        this.years = Array.from(new Array(50), (val, index) => year - 10 - index);\n    }\n\n    componentDidMount = () => {\n        this.getGeoInfo()\n    }\n\n    handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n            errorData: null,\n            successData: null\n        });\n    }\n\n    selectCountry(val) {\n        CountryRegionData.forEach((value, _) => {\n            if (val === value[1]) {\n                this.setState({ countryCode: value[1], countryName: value[0] });\n            }\n        })\n    }\n\n    selectRegion(value) {\n        this.setState({ region: value });\n    }\n\n\n    getGeoInfo = () => {\n        axios.get('https://ipapi.co/json/').then((response) => {\n            let data = response.data;\n            this.setState({\n                countryName: data.country_name,\n                countryCode: data.country\n            });\n        }).catch((error) => {\n            console.log(error);\n        });\n    };\n\n    handleSubmit = () => {\n\n        let data = {\n            name: this.state.name,\n            age: this.state.age,\n            phone: this.state.phone,\n            email: this.state.email,\n            password: this.state.password,\n            gender: this.state.gender,\n            city: this.state.city,\n            country: this.state.countryName,\n            zipcode: this.state.zipcode,\n            contactName: this.state.contactName,\n            contactNumber: this.state.contactNumber,\n            group: this.state.group\n        }\n\n        this.setState({\n            loading: true\n        })\n\n        axios.post(ENDPOINT, data).then((res) => {\n            this.setState({\n                loading: false,\n                successData: res[\"data\"]\n            })\n        }).catch((err) => {\n            this.setState({\n                loading: false,\n                errorData: err.response.data['errors']\n            })\n        })\n    }\n\n    render = () => {\n\n        return (\n            <div className=\"container padding-top\">\n                <div className=\"row justify-content-center align-items-center\">\n                    <div className=\"col-12 col-md-8 align-self-center pb-3 pt-3\">\n                        <div className=\"card\">\n                            <div className=\"card-header text-center\">\n                                <h2>User Registration</h2>\n                            </div>\n                            <div className=\"card-body\">\n                                {this.state.errorData !== null && (\n                                    this.state.errorData.map((v, i) => {\n                                        return (<div class=\"alert alert-danger\" role=\"alert\">\n                                            {v['message']}\n                                        </div>)\n                                    })\n                                )}\n                                {this.state.successData !== null && (\n                                    <div class=\"alert alert-success\" role=\"alert\">\n                                    {this.state.successData['status']}\n                                  </div>\n                                )}\n                                <div className=\"form-floating mb-3\">\n                                    <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Name\" />\n                                    <label>Name</label>\n                                </div>\n                                <div className=\"form-floating mb-3\">\n                                    <select className=\"form-select\" id=\"floatingSelectGrid\" name=\"age\" onChange={this.handleInputChange} value={this.state.age}>\n                                        <option value={''}>Select Year</option>\n                                        {\n                                            this.years.map((year, index) => {\n                                                return <option key={`year${index}`} value={year}>{year}</option>\n                                            })\n                                        }\n                                    </select>\n                                    <label>Year of Birth</label>\n                                </div>\n                                <div className=\"form-floating mb-3\">\n                                    <select className=\"form-select\" id=\"floatingSelectGrid\" name=\"gender\" onChange={this.handleInputChange} value={this.state.gender}>\n                                        <option value={''}>Select Gender</option>\n                                        <option value={'M'}>Male</option>\n                                        <option value={'F'}>Female</option>\n                                        <option value={'O'}>Other</option>\n                                    </select>\n                                    <label>Gender</label>\n                                </div>\n                                <div className=\"row no-gutters mb-3\">\n                                    <div className=\"col-auto\">\n                                        <img src={`https://www.countryflags.io/${this.state.countryCode}/flat/64.png`} />\n                                    </div>\n                                    <div className=\"col\">\n                                        <div className=\"form-floating\">\n                                            <input type=\"number\" name=\"phone\" value={this.state.phone} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Phone\" />\n                                            <label className=\"ms-2\">Phone</label>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-floating mb-3\">\n                                    <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Email\" />\n                                    <label>Email</label>\n                                </div>\n                                <div className=\"form-floating mb-3\">\n                                    <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Password\" />\n                                    <label>Password</label>\n                                </div>\n                                <div className=\"form-floating mb-3\">\n                                    <input type=\"text\" name=\"city\" value={this.state.city} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"City\" />\n                                    <label>City</label>\n                                </div>\n                                <div className=\"form-floating mb-3\">\n                                    <input type=\"number\" name=\"zipcode\" value={this.state.zipcode} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Zipcode\" />\n                                    <label>Pin Code</label>\n                                </div>\n                                <div className=\"form-floating mb-3\">\n                                    <CountryDropdown className=\"form-select\" name=\"COUNTRY\" value={this.state.countryCode} valueType=\"short\" showDefaultOption={false} onChange={(val) => { this.selectCountry(val) }} />\n                                    <label for=\"floatingSelectGrid\">Country</label>\n                                </div>\n                                <div className=\"form-floating mb-3\">\n                                    <input type=\"text\" name=\"contactName\" value={this.state.contactName} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Contact Name\" />\n                                    <label>Contact Name</label>\n                                </div>\n                                <div className=\"row no-gutters mb-3\">\n                                    <div className=\"col-auto\">\n                                        <img src={`https://www.countryflags.io/${this.state.countryCode}/flat/64.png`} />\n                                    </div>\n                                    <div className=\"col\">\n                                        <div className=\"form-floating\">\n                                            <input type=\"number\" name=\"contactNumber\" value={this.state.contactNumber} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Contact Number\" />\n                                            <label className=\"ms-2\">Contact Number</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-floating mb-3\">\n                                    <input type=\"text\" name=\"group\" value={this.state.group} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Group\" />\n                                    <label>Group</label>\n                                </div>\n\n                                <div className=\"d-grid gap-2\">\n                                    <button className=\"btn btn-outline-primary btn-lg\" type=\"button\" onClick={this.handleSubmit} disabled={this.state.loading}>\n                                        {this.state.loading ? (\n                                            <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                                        ) : ('Submit')}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}